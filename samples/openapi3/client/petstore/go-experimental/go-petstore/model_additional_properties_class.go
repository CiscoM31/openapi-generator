/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstore

import (
	"encoding/json"
)

// AdditionalPropertiesClass struct for AdditionalPropertiesClass
type AdditionalPropertiesClass struct {
	MapProperty *map[string]string `json:"map_property,omitempty"`
	MapOfMapProperty *map[string]map[string]string `json:"map_of_map_property,omitempty"`
	MapWithAdditionalProperties *map[string]map[string]interface{} `json:"map_with_additional_properties,omitempty"`
	MapWithoutAdditionalProperties *map[string]interface{} `json:"map_without_additional_properties,omitempty"`
	MapString *map[string]string `json:"map_string,omitempty"`
}

// NewAdditionalPropertiesClass instantiates a new AdditionalPropertiesClass object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdditionalPropertiesClass() *AdditionalPropertiesClass {
	this := AdditionalPropertiesClass{}
	return &this
}

// NewAdditionalPropertiesClassWithDefaults instantiates a new AdditionalPropertiesClass object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdditionalPropertiesClassWithDefaults() *AdditionalPropertiesClass {
	this := AdditionalPropertiesClass{}
	return &this
}

// GetMapProperty returns the MapProperty field value if set, zero value otherwise.
func (o *AdditionalPropertiesClass) GetMapProperty() map[string]string {
	if o == nil || o.MapProperty == nil {
		var ret map[string]string
		return ret
	}
	return *o.MapProperty
}

// GetMapPropertyOk returns a tuple with the MapProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalPropertiesClass) GetMapPropertyOk() (*map[string]string, bool) {
	if o == nil || o.MapProperty == nil {
		return nil, false
	}
	return o.MapProperty, true
}

// HasMapProperty returns a boolean if a field has been set.
func (o *AdditionalPropertiesClass) HasMapProperty() bool {
	if o != nil && o.MapProperty != nil {
		return true
	}

	return false
}

// SetMapProperty gets a reference to the given map[string]string and assigns it to the MapProperty field.
func (o *AdditionalPropertiesClass) SetMapProperty(v map[string]string) {
	o.MapProperty = &v
}

// GetMapOfMapProperty returns the MapOfMapProperty field value if set, zero value otherwise.
func (o *AdditionalPropertiesClass) GetMapOfMapProperty() map[string]map[string]string {
	if o == nil || o.MapOfMapProperty == nil {
		var ret map[string]map[string]string
		return ret
	}
	return *o.MapOfMapProperty
}

// GetMapOfMapPropertyOk returns a tuple with the MapOfMapProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalPropertiesClass) GetMapOfMapPropertyOk() (*map[string]map[string]string, bool) {
	if o == nil || o.MapOfMapProperty == nil {
		return nil, false
	}
	return o.MapOfMapProperty, true
}

// HasMapOfMapProperty returns a boolean if a field has been set.
func (o *AdditionalPropertiesClass) HasMapOfMapProperty() bool {
	if o != nil && o.MapOfMapProperty != nil {
		return true
	}

	return false
}

// SetMapOfMapProperty gets a reference to the given map[string]map[string]string and assigns it to the MapOfMapProperty field.
func (o *AdditionalPropertiesClass) SetMapOfMapProperty(v map[string]map[string]string) {
	o.MapOfMapProperty = &v
}

// GetMapWithAdditionalProperties returns the MapWithAdditionalProperties field value if set, zero value otherwise.
func (o *AdditionalPropertiesClass) GetMapWithAdditionalProperties() map[string]map[string]interface{} {
	if o == nil || o.MapWithAdditionalProperties == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.MapWithAdditionalProperties
}

// GetMapWithAdditionalPropertiesOk returns a tuple with the MapWithAdditionalProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalPropertiesClass) GetMapWithAdditionalPropertiesOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.MapWithAdditionalProperties == nil {
		return nil, false
	}
	return o.MapWithAdditionalProperties, true
}

// HasMapWithAdditionalProperties returns a boolean if a field has been set.
func (o *AdditionalPropertiesClass) HasMapWithAdditionalProperties() bool {
	if o != nil && o.MapWithAdditionalProperties != nil {
		return true
	}

	return false
}

// SetMapWithAdditionalProperties gets a reference to the given map[string]map[string]interface{} and assigns it to the MapWithAdditionalProperties field.
func (o *AdditionalPropertiesClass) SetMapWithAdditionalProperties(v map[string]map[string]interface{}) {
	o.MapWithAdditionalProperties = &v
}

// GetMapWithoutAdditionalProperties returns the MapWithoutAdditionalProperties field value if set, zero value otherwise.
func (o *AdditionalPropertiesClass) GetMapWithoutAdditionalProperties() map[string]interface{} {
	if o == nil || o.MapWithoutAdditionalProperties == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.MapWithoutAdditionalProperties
}

// GetMapWithoutAdditionalPropertiesOk returns a tuple with the MapWithoutAdditionalProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalPropertiesClass) GetMapWithoutAdditionalPropertiesOk() (*map[string]interface{}, bool) {
	if o == nil || o.MapWithoutAdditionalProperties == nil {
		return nil, false
	}
	return o.MapWithoutAdditionalProperties, true
}

// HasMapWithoutAdditionalProperties returns a boolean if a field has been set.
func (o *AdditionalPropertiesClass) HasMapWithoutAdditionalProperties() bool {
	if o != nil && o.MapWithoutAdditionalProperties != nil {
		return true
	}

	return false
}

// SetMapWithoutAdditionalProperties gets a reference to the given map[string]interface{} and assigns it to the MapWithoutAdditionalProperties field.
func (o *AdditionalPropertiesClass) SetMapWithoutAdditionalProperties(v map[string]interface{}) {
	o.MapWithoutAdditionalProperties = &v
}

// GetMapString returns the MapString field value if set, zero value otherwise.
func (o *AdditionalPropertiesClass) GetMapString() map[string]string {
	if o == nil || o.MapString == nil {
		var ret map[string]string
		return ret
	}
	return *o.MapString
}

// GetMapStringOk returns a tuple with the MapString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalPropertiesClass) GetMapStringOk() (*map[string]string, bool) {
	if o == nil || o.MapString == nil {
		return nil, false
	}
	return o.MapString, true
}

// HasMapString returns a boolean if a field has been set.
func (o *AdditionalPropertiesClass) HasMapString() bool {
	if o != nil && o.MapString != nil {
		return true
	}

	return false
}

// SetMapString gets a reference to the given map[string]string and assigns it to the MapString field.
func (o *AdditionalPropertiesClass) SetMapString(v map[string]string) {
	o.MapString = &v
}

func (o AdditionalPropertiesClass) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MapProperty != nil {
		toSerialize["map_property"] = o.MapProperty
	}
	if o.MapOfMapProperty != nil {
		toSerialize["map_of_map_property"] = o.MapOfMapProperty
	}
	if o.MapWithAdditionalProperties != nil {
		toSerialize["map_with_additional_properties"] = o.MapWithAdditionalProperties
	}
	if o.MapWithoutAdditionalProperties != nil {
		toSerialize["map_without_additional_properties"] = o.MapWithoutAdditionalProperties
	}
	if o.MapString != nil {
		toSerialize["map_string"] = o.MapString
	}
	return json.Marshal(toSerialize)
}

type NullableAdditionalPropertiesClass struct {
	value *AdditionalPropertiesClass
	isSet bool
}

func (v NullableAdditionalPropertiesClass) Get() *AdditionalPropertiesClass {
	return v.value
}

func (v *NullableAdditionalPropertiesClass) Set(val *AdditionalPropertiesClass) {
	v.value = val
	v.isSet = true
}

func (v NullableAdditionalPropertiesClass) IsSet() bool {
	return v.isSet
}

func (v *NullableAdditionalPropertiesClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdditionalPropertiesClass(val *AdditionalPropertiesClass) *NullableAdditionalPropertiesClass {
	return &NullableAdditionalPropertiesClass{value: val, isSet: true}
}

func (v NullableAdditionalPropertiesClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdditionalPropertiesClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

